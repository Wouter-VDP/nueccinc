# Columns for daughter frames:
col_pfp = ["pfnplanehits_U", 
           "pfnplanehits_V", 
           "pfnplanehits_Y", 
           "pfpplanesubclusters_U",
           "pfpplanesubclusters_V",
           "pfpplanesubclusters_Y",
           #"pfpplanesubhitfracmax_U",
           #"pfpplanesubhitfracmax_V",
           "pfpplanesubhitfracmax_Y",
           "pfnhits",
           "pfp_generation_v",
           "pfp_trk_daughters_v",
           "pfp_shr_daughters_v",
          ]
col_trk = [
    "trk_score_v",
    "trk_distance_v",
    "trk_theta_v",
    "trk_phi_v",
    "trk_len_v",
    #"trk_llr_pid_u_v",
    #"trk_llr_pid_v_v",
    #"trk_llr_pid_y_v",
    #"trk_llr_pid_v",
    "trk_llr_pid_score_v",
    "trk_mcs_muon_mom_v",
    "trk_range_muon_mom_v",
    "trk_energy_proton_v",
    "trk_calo_energy_y_v",
    "trk_sce_end_x_v",
    "trk_sce_end_y_v",
    "trk_sce_end_z_v",
    "trk_sce_start_x_v",
    "trk_sce_start_y_v",
    "trk_sce_start_z_v",
    "trk_start_x_v",
    "trk_start_y_v",
    "trk_start_z_v"
]
col_shr = [
    "shr_dist_v",
    "shr_energy_y_v",
    "shr_energy_u_v",
    "shr_energy_v_v",
    "shr_tkfit_start_x_v",
    "shr_tkfit_start_y_v",
    "shr_tkfit_start_z_v",
    "shr_start_x_v",
    "shr_start_y_v",
    "shr_start_z_v",
    "shr_tkfit_theta_v",
    "shr_tkfit_phi_v",
    "shr_phi_v",
    "shr_theta_v",
    "shr_tkfit_dedx_u_v",
    "shr_tkfit_dedx_v_v",
    "shr_tkfit_dedx_y_v",
    "shr_tkfit_gap10_dedx_u_v",
    "shr_tkfit_gap10_dedx_v_v",
    "shr_tkfit_gap10_dedx_y_v",
    "shr_tkfit_nhits_v",
    "shr_tkfit_dedx_nhits_u_v",
    "shr_tkfit_dedx_nhits_v_v",
    "shr_tkfit_dedx_nhits_y_v",
    'shr_moliere_avg_v',
    #'shr_moliere_rms_v'
]

col_backtracked = [
    "backtracked_pdg",
    "backtracked_e",
    "backtracked_completeness",
    "backtracked_purity",
    "backtracked_overlay_purity",
    "backtracked_px",
    "backtracked_py",
    "backtracked_pz",
    "backtracked_sce_start_x",
    "backtracked_sce_start_y",
    "backtracked_sce_start_z"
]

col_mc = [
    "true_nu_vtx_x",
    "true_nu_vtx_y",
    "true_nu_vtx_z",
    "true_nu_vtx_sce_x",
    "true_nu_vtx_sce_y",
    "true_nu_vtx_sce_z",
    "nu_e",
    "lep_e",
    "nu_pdg",
    'nelec',
    'npion',
    'npi0',
    'nproton',
    'nmuon',
    "theta",
    "ccnc",
    "interaction",
    "weightSpline",
    "leeweight",
    "nu_completeness_from_pfp",
    "nu_purity_from_pfp",
    "weightSplineTimesTune"
]
col_event = [
    "run",
    "sub",
    "evt",
    "topological_score",
    "n_pfps",
    "n_showers",
    "n_tracks",
    "reco_nu_vtx_sce_x",
    "reco_nu_vtx_sce_y",
    "reco_nu_vtx_sce_z",
    "reco_nu_vtx_x",
    "reco_nu_vtx_y",
    "reco_nu_vtx_z",
    "crtveto",
    "crthitpe",
    "slclustfrac",
    "nu_flashmatch_score",
    "category",
    "nslice",
    "contained_sps_ratio",
    "slpdg",
    "SliceCaloEnergy2",
    'NeutrinoEnergy2',
    "secondshower_U_nhit",
    "secondshower_V_nhit",
    "secondshower_Y_nhit",
    "secondshower_Y_vtxdist",
    "secondshower_Y_dot",
    "secondshower_Y_dir",
    "secondshower_Y_eigenratio",
    # Roberto fields
    "hits_ratio",
    "contained_fraction",
    "n_showers_contained",
    "n_tracks_contained",
    "shrclusdir2",
    "shrsubclusters2",
    "shrclusfrac2",
    "extra_energy_y",
    "CosmicIP",
    "ismerged",
    "merge_bestdot",
    "merge_bestdist" 
]

cols_run3 = ["_closestNuCosmicDist"]

cols_flatten = col_trk + col_shr + col_pfp
cols_reco = col_event + cols_flatten

# Columsn for truth info per event
table_cols = [
    "mc_pdg",
    "mc_E",
    "lep_e",
    "ccnc",
    "theta",
    "true_nu_vtx_x",
    "true_nu_vtx_y",
    "true_nu_vtx_z",
    "n_pfps",
    "interaction",
    "weightSpline",
    "weightSplineTimesTune",
    "leeweight",
    "category",
    "nu_e",
    "nu_pdg",
    'nelec',
    'npion',
    'npi0',
    'nproton',
    'nmuon',
    "nu_completeness_from_pfp",
    "nu_purity_from_pfp"
]
